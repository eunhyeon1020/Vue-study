todoList 16강 - 문제점 

<문제점>
TodoInput에서 데이터 추가 => 로컬스토리지 추가 
TodoFooter에서 데이터 삭제 => 로컬스토리지 삭제 
TodoList에서 최신 데이터 미반영 


리스트 데이터 추가하는 버튼을 누름 => 화면 단에서는 반응없음, 로컬스토리지는 추가됨. 

삭제 버튼을 누름 => 화면 단에서는 삭제됨, 로컬스트로지에서는 반응 없음 
--> 갱신(새로고침)을 해야만 다시 리스트 컴포넌트가 생성되면서 created 라이프 사이클 훅이 발생해 데이터를 다 불러와 갱신 

clear All을 누름 ==> 화면단에서는 반응 없음, 로컬스토리지에서는 다 비워짐 
--> 로컬 스토리지를 다 비웠는데 클리어는 컴포넌트가 footer에 존재 , 리스트 컴포넌트도 해당 사실을 알리지 않음, 그래서 아무런 반응이 존재하지 않음. 
--> 각각의 컴포넌트 간에 통신이 안되고 데이터 전달이 되지 않아 다시 갱신해야만 그 사실이 반영됨. 


<개선할 구조> 
TodoInput ==추가 이벤트==> app 
TodoFooter ==삭제 이벤트==> app 

app ==데이터 추가 / 데이터 삭제==> 로컬 스토리지 
로컬스토리지 ==데이터 동기화==> app 
app ==props==> TodoList 


app : 데이터 조작, 컨테이너 
todoList, todoInput, todoFooter : 컴포넌트 

vuex 이해하기 :: 전체적인 컴포넌트에서 사용할 데이터를 app으로 다 몰았음, app 한군데서 데이터조작(컨테이너)가 일어나는 것 


** 용어 ** 
컴포넌트 설계할 때 단순히 화면을 표현하는 프레젠터 컴포넌트가 존재 
앱의 동작, 데이터 조작 ==> 비지니스 로직 
데이터 조작 ... 컨테이너 
단순한 화면 표현 ... 컴포넌트 

